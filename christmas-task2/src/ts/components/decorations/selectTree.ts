import { Tree } from "../../model/tree";
import Component from "../abstractComponent";

export class SelectTree extends Component {
  treesArray: Tree[];
  selectTreeEvent: CustomEvent;
  selectedTree: Tree;

  constructor(){
    super('Выберите ёлку');
    this.selectTreeEvent = new CustomEvent('selectedTreeEvent', {bubbles: true});
    this.treesArray = [
      {
        num: 1,
        coords: "119,677,101,673,123,641,75,654,59,623,41,621,23,601,44,577,9,577,0,544,16,531,74,534,91,515,80,507,79,494,56,504,46,494,41,483,44,471,23,460,16,451,23,429,98,431,108,387,70,366,76,344,142,358,111,328,115,305,160,292,117,275,122,249,99,232,107,205,153,220,171,212,159,187,177,167,150,138,168,120,195,139,196,116,200,103,189,91,203,63,198,50,223,34,238,0,266,5,267,35,289,48,292,62,312,70,311,86,279,123,307,113,318,130,311,154,345,136,364,151,351,184,356,216,394,207,406,234,362,265,395,276,397,301,366,311,379,322,391,343,425,336,433,368,374,389,372,404,406,398,417,428,454,436,457,470,428,478,425,497,437,522,493,527,496,565,479,585,441,678,389,665,379,688,362,704,340,701,306,707,293,696,239,708,225,688,215,704,181,713,161,655,137,691,126,688"
      },
      {
        num: 2,
        coords: "228,663,206,680,193,676,148,712,130,710,129,700,103,690,119,659,75,652,59,629,36,645,1,638,32,612,17,586,15,552,42,553,26,521,24,502,33,480,65,471,49,448,86,421,72,371,107,353,87,328,97,296,117,287,131,260,129,230,144,224,143,190,165,191,174,139,179,114,191,86,205,64,219,39,232,33,251,-1,268,21,280,44,301,71,301,100,318,98,324,127,333,186,354,193,330,227,346,225,372,214,362,235,383,241,366,262,358,283,393,271,377,309,394,309,385,332,396,342,410,339,403,376,411,393,431,406,408,421,412,436,458,446,446,460,453,479,453,506,464,516,485,521,468,536,476,549,458,559,498,578,480,592,494,610,435,624,488,648,443,664,429,680,399,655,365,660,395,697,355,698,331,702,294,694,281,683,257,696"
      },
      {
        num: 3,
        coords: "253,686,229,702,204,679,188,699,173,691,149,710,131,694,142,673,113,682,60,679,24,646,20,622,5,611,29,590,23,567,49,548,41,530,58,502,43,488,58,473,76,400,97,397,85,379,107,365,111,338,116,307,137,276,132,253,143,245,152,231,151,219,156,186,171,149,188,141,182,112,194,102,208,77,204,55,225,38,221,13,245,-1,256,12,260,34,281,43,297,53,292,81,306,90,308,109,328,116,335,143,342,158,336,179,355,196,341,219,362,228,355,246,380,245,386,268,387,294,398,313,386,326,388,339,412,338,418,358,411,376,427,379,416,402,442,410,440,432,431,447,454,449,451,465,466,486,452,501,471,523,483,548,492,572,493,601,468,617,484,634,478,660,448,667,422,678,389,657,385,677,319,712"
      },
      {
        num: 4,
        coords: "172,688,151,667,114,700,108,690,80,713,87,673,80,667,63,668,62,650,37,659,11,663,31,640,5,633,32,622,23,608,5,601,29,578,48,571,44,557,46,541,84,483,35,489,106,404,64,407,83,380,89,357,106,327,82,319,116,287,117,271,148,253,144,226,157,216,126,212,131,200,159,189,167,162,153,158,152,143,169,143,197,94,194,77,207,66,207,46,219,34,238,26,237,3,253,4,254,28,267,30,263,49,282,51,290,82,312,123,328,143,322,160,340,168,330,189,346,201,368,227,341,239,365,254,370,265,360,283,397,307,392,326,412,343,399,359,379,352,387,369,423,401,422,421,413,429,436,449,449,461,417,467,406,484,428,490,452,520,412,528,421,539,458,569,464,592,496,612,492,624,471,617,449,625,469,640,453,646,428,641,427,661,447,702,415,696,406,702,373,674,361,696,340,683,332,700,302,685,290,696,270,697,276,709,248,713,245,690,214,693"
      },
      {
        num: 5,
        coords: "189,669,170,689,134,701,113,693,69,699,62,677,47,667,50,643,4,619,24,595,23,570,40,554,50,516,85,493,59,468,98,455,76,418,123,373,112,345,234,34,247,2,266,40,295,107,294,129,310,142,302,173,324,177,322,208,342,219,333,240,357,280,341,304,367,316,387,350,384,388,422,419,397,451,423,488,440,508,454,529,452,556,477,583,463,601,497,621,482,640,428,649,439,667,439,687,382,680,368,706,288,702,266,688,244,697,212,692,187,690"
      },
      {
        num: 6,
        coords: "231,682,192,699,160,698,149,678,108,684,97,665,56,663,61,643,3,618,43,591,21,560,42,527,18,515,61,481,49,468,71,446,47,436,87,406,74,387,56,368,61,353,88,350,85,329,97,322,114,323,124,309,93,286,100,274,121,283,139,270,109,263,113,250,163,239,127,204,133,189,161,205,167,188,149,155,152,140,172,154,181,141,184,118,203,111,198,96,201,71,227,84,220,48,229,38,241,58,249,1,267,3,267,44,297,28,292,69,310,85,330,129,345,153,368,193,350,228,390,238,373,263,401,272,389,294,407,303,395,324,420,343,418,358,447,367,446,385,415,392,433,408,424,429,456,456,455,482,465,501,470,526,473,546,499,574,499,586,462,586,461,606,482,616,484,641,424,656,402,673,344,692,305,709,274,695,250,704"
      }
    ];
    this.selectedTree = this.treesArray[0];
  }

  construct() : HTMLElement {
    this.root = document.createElement('div');
    this.root.classList.add('select-trees-container');

    const title = document.createElement('h2');
    title.classList.add('select-trees-container__title', 'h2-font');
    title.innerText = this.title;
    this.root.append(title);

    const div = document.createElement('div');
    div.classList.add('select-trees-container__div', 'select-cards-container');

    this.treesArray.forEach((treeInfo) => {
      div.append(this.drawCard(treeInfo.num));
    })

    this.root.append(div);
    this.subscribe();

    return this.root;
  }

  getUrlByNumber(num: number): string{
    return `./assets/tree/${num}.png`;
  }

  drawCard(num: number): HTMLElement {
    const label = document.createElement('label');
    label.classList.add('trees-card-label', 'card');

    const input = document.createElement('input') as HTMLInputElement;
    input.classList.add('trees-card-label__input', 'invisible-input');
    input.type = 'radio';
    input.name = 'select-trees';
    input.value = "" + num;

    const img = document.createElement('img') as HTMLImageElement;
    img.classList.add('trees-card-label__image')
    img.src = this.getUrlByNumber(num);

    label.append(input, img);

    return label;
  }

  subscribe(): void {
    let radioButtons = this.root?.querySelectorAll('input[name=select-trees]') as NodeListOf<HTMLInputElement>;
    for (let button of radioButtons){
      button.addEventListener('change', () => {
        console.log("value of radio btn has changed, tree checked = ", button.value);
        this.selectedTree = this.treesArray[+button.value - 1];
        console.log("selected tree = ", this.selectedTree);
        this.root?.dispatchEvent(this.selectTreeEvent);
      })
    }
    
  }
}

